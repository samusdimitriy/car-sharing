{"version":3,"file":"static/js/159.12813860.chunk.js","mappings":"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","sources":["component/FromToField/FromToField.jsx","images/icons/ChevronDownIcon.jsx","component/SelectField/SelectField.jsx","component/Filter/Filter.jsx","pages/Catalog/Catalog.jsx","utils/createArrayWithStep.js"],"sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { toast } from 'react-toastify';\nimport { commaToNumber } from 'utils/commaToNumber';\n\nconst InputFromToFieldGroup = styled.div`\n  display: inline-grid;\n  gap: 8px;\n  width: 320px;\n  font-size: var(--headingsSecondFontSize);\n  font-weight: 500;\n  line-height: 1.28;\n  color: var(--headingsSecondColor);\n`;\n\nconst InputFromToContainer = styled.div`\n  display: flex;\n  grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n  width: 320px;\n  border-radius: 14px;\n  overflow: hidden;\n`;\n\nconst InputFromToWrapper = styled.div`\n  position: relative;\n  display: flex;\n  color: var(--headingsColor);\n  font-size: 18px;\n  line-height: 1.11;\n  width: 160px;\n  height: 48px;\n\n  label,\n  .input__from,\n  .input__to {\n    white-space: nowrap;\n    display: block;\n  }\n\n  label {\n    position: absolute;\n    top: 14px;\n    left: 24px;\n    color: inherit;\n  }\n\n  input {\n    display: block;\n    width: 100%;\n    padding: 14px 24px;\n    font-family: inherit;\n    font-size: inherit;\n    font-style: inherit;\n    font-weight: inherit;\n    line-height: inherit;\n    --webkit-appearance: none;\n    color: inherit;\n    background-color: var(--bgSecondColor);\n    border: 1px solid var(--bgSecondColor);\n\n    &.input__from {\n      padding-left: 70px;\n      border-right: 1px solid var(--borderSecondColor);\n    }\n\n    &.input__to {\n      padding-left: 48px;\n    }\n\n    &:focus {\n      outline: none;\n    }\n  }\n`;\n\nconst FromToField = props => {\n  const {\n    id = 'text-input',\n    label = 'label',\n    value = { from: '', to: '' },\n  } = props;\n\n  const [fieldValue, setFieldValue] = useState(value);\n\n  const onChange = e => {\n    if (!/^[0-9,]+$/.test(e.target.value) && e.target.value.trim()) {\n      toast.warn('Please write only numbers');\n      return;\n    }\n\n    setFieldValue(prev => ({\n      ...prev,\n      [e.target.name]: commaToNumber(e.target.value),\n    }));\n  };\n\n  return (\n    <InputFromToFieldGroup>\n      <p>{label}</p>\n      <InputFromToContainer>\n        <InputFromToWrapper>\n          <label htmlFor={`${id}_from`}>From</label>\n          <input\n            name={'from'}\n            value={fieldValue.from}\n            className=\"input__from\"\n            id={`${id}_from`}\n            type=\"text\"\n            onChange={onChange}\n            autoComplete=\"off\"\n          />\n        </InputFromToWrapper>\n        <InputFromToWrapper>\n          <label htmlFor={`${id}_to`}>To</label>\n          <input\n            name={'to'}\n            value={fieldValue.to}\n            className=\"input__to\"\n            id={`${id}_to`}\n            type=\"text\"\n            onChange={onChange}\n            autoComplete=\"off\"\n          />\n        </InputFromToWrapper>\n      </InputFromToContainer>\n    </InputFromToFieldGroup>\n  );\n};\n\nFromToField.propTypes = {\n  id: PropTypes.string,\n  label: PropTypes.string,\n  value: PropTypes.shape({ from: PropTypes.string, to: PropTypes.string }),\n};\n\nexport default FromToField;\n","import * as React from \"react\";\nconst ChevronDownIcon = (props) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={20}\n    height={20}\n    fill=\"none\"\n    {...props}\n  >\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={2}\n      d=\"m5 7.5 5 5 5-5\"\n    />\n  </svg>\n);\nexport default ChevronDownIcon;\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport ChevronDownIcon from 'images/icons/ChevronDownIcon';\nimport { useEffect, useState } from 'react';\n\nconst DropdownContainer = styled.div`\n  position: relative;\n  display: inline-grid;\n  gap: 8px;\n  height: 74px;\n`;\n\nconst DropdownLabel = styled.p`\n  color: var(--headingsSecondColor);\n  font-size: var(--headingsSecondFontSize);\n  font-style: normal;\n  font-weight: 500;\n  line-height: 1.28;\n`;\n\nconst DropdownHeader = styled.div`\n  position: relative;\n  z-index: 0;\n  color: var(--headingsColor);\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.11;\n  padding: 14px 18px;\n  background-color: var(--bgSecondColor);\n  border-radius: 14px;\n\n  & > svg {\n    position: absolute;\n    top: 14px;\n    right: 18px;\n    stroke: var(--headingsColor);\n  }\n`;\n\nconst DropdownSelectInput = styled.input`\n  appearance: none;\n  border: none;\n  outline: none;\n  background-color: transparent;\n  cursor: pointer;\n`;\n\nconst DropdownListContainer = styled.div`\n  position: relative;\n  z-index: 5;\n  margin-top: 4px;\n  padding: 14px 8px 14px 18px;\n  height: 272px;\n  overflow-y: scroll;\n  border-radius: 14px;\n  border: 1px solid rgba(18, 20, 23, 0.05);\n  background-color: var(--bgColor);\n  box-shadow: 0px 4px 36px 0px rgba(0, 0, 0, 0.02);\n`;\n\nconst DropdownList = styled.ul`\n  display: grid;\n  gap: 8px;\n  background: var(--bgColor);\n`;\n\nconst DropdownItem = styled.li`\n  color: rgba(18, 20, 23, 0.2);\n  font-size: var(--standardSize);\n  font-weight: 500;\n  line-height: 1.25;\n  background-color: var(--bgColor);\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: inherit;\n  }\n`;\n\nconst SelectField = ({\n  name,\n  id,\n  label,\n  placeholder = 'Enter the text',\n  optionList,\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  const toggling = () => setIsOpen(!isOpen);\n\n  const onOptionClicked = value => () => {\n    setSelectedOption(value);\n    setIsOpen(false);\n  };\n\n  useEffect(() => {\n    const handleKeydown = e => {\n      if (e.code === 'Escape') {\n        setIsOpen(false);\n      }\n    };\n\n    window.addEventListener('keydown', handleKeydown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeydown);\n    };\n  }, [isOpen]);\n\n  return (\n    <DropdownContainer>\n      <DropdownLabel>{label}</DropdownLabel>\n      <div className=\"dropdown__select\">\n        <DropdownHeader\n          className={isOpen ? 'dropdown__open' : ''}\n          onClick={toggling}\n        >\n          <DropdownSelectInput\n            type=\"text\"\n            id={id}\n            name={name}\n            value={selectedOption || placeholder}\n            readOnly={true}\n          />\n          <ChevronDownIcon />\n        </DropdownHeader>\n        {isOpen && (\n          <DropdownListContainer>\n            <DropdownList>\n              {optionList.map(option => (\n                <DropdownItem\n                  name={name}\n                  onClick={onOptionClicked(option)}\n                  key={Math.random()}\n                >\n                  {option}\n                </DropdownItem>\n              ))}\n            </DropdownList>\n          </DropdownListContainer>\n        )}\n      </div>\n    </DropdownContainer>\n  );\n};\n\nSelectField.propTypes = {\n  name: PropTypes.string,\n  id: PropTypes.string,\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  optionList: PropTypes.array,\n  value: PropTypes.string,\n};\n\nexport default SelectField;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { toast } from 'react-toastify';\n\nimport { selectAdvertsFilter } from 'redux/filters/filtersSelectors';\nimport { setAdvertsFilter } from 'redux/filters/filtersSlice';\nimport { removeCommasFromString } from 'utils/commaToNumber';\n\nimport FromToField from 'component/FromToField/FromToField';\nimport SelectField from 'component/SelectField/SelectField';\nimport Button from 'component/Button/Button';\n\nconst FilterForm = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n  gap: 18px;\n  margin-bottom: 50px;\n`;\n\nconst Filter = ({ filtersList }) => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectAdvertsFilter);\n\n  const handleChangeFilter = e => {\n    e.preventDefault();\n\n    const { brand, price, from, to } = e.target.elements;\n\n    if (\n      (!brand.value || brand.value === 'Enter the text') &&\n      (!price.value || price.value === 'To $') &&\n      !from.value &&\n      !to.value\n    ) {\n      toast.info('Please choose one of the filters');\n      return;\n    }\n\n    const newfilters = {\n      [brand.name]: brand.value !== 'Enter the text' ? brand.value : '',\n      [price.name]: price.value !== 'To $' ? price.value : '',\n      mileage: {\n        from: removeCommasFromString(from.value),\n        to: removeCommasFromString(to.value),\n      },\n      prices: [],\n    };\n\n    dispatch(setAdvertsFilter(newfilters));\n  };\n\n  return (\n    <FilterForm onSubmit={handleChangeFilter}>\n      <SelectField\n        name=\"brand\"\n        label=\"Car brand\"\n        value={filter.brand}\n        optionList={filtersList.brands}\n      />\n      <SelectField\n        name=\"price\"\n        label=\"Price/ 1 hour\"\n        placeholder=\"To $\"\n        value={filter.price}\n        optionList={filtersList.prices}\n      />\n      <FromToField\n        name=\"mileage\"\n        label=\"Car mileage / km\"\n        value={filter.mileage}\n      />\n      <Button type=\"submit\">Search</Button>\n    </FilterForm>\n  );\n};\n\nexport default Filter;\n","import { useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\n\nimport { useGetAdvertsQuery } from 'redux/adverts/advertsSlice';\nimport { selectAdvertsFilter } from 'redux/filters/filtersSelectors';\n\nimport { getFilteredAdverts } from 'utils/getFilteredAdverts';\nimport { createArrayWithStep } from 'utils/createArrayWithStep';\n\nimport AdvertsList from 'component/AdvertsList/AdvertsList';\nimport Filter from 'component/Filter/Filter';\nimport Section from 'component/Section/Section';\nimport Button from 'component/Button/Button';\nimport CustomLoader from 'component/CustomLoader/CustomLoader';\n\nconst LoadMoreButton = styled(Button)`\n  display: block;\n  margin: 100px auto 0 auto;\n  border: 1px solid var(--accentColor);\n\n  &:hover {\n    background-color: var(--accentColor);\n    color: var(--whiteColor);\n  }\n`;\n\nconst ButtonsWrapper = styled.div`\n  display: flex;\n  width: fit-content;\n  gap: 24px;\n  margin: auto;\n`;\n\nconst Catalog = () => {\n  const filter = useSelector(selectAdvertsFilter);\n  const { data: adverts, isLoading } = useGetAdvertsQuery();\n  const [currentPage, setCurrentPage] = useState(1);\n\n  let dataFilters = {\n    brands: [],\n    prices: [],\n  };\n  let visibleAdverts = useMemo(() => {}, []);\n\n  const limitAdverts = 8;\n  let totalAdverts = 0;\n  let totalPages = 0;\n\n  if (!isLoading) {\n    visibleAdverts = getFilteredAdverts(adverts, filter);\n    dataFilters = {\n      brands: ['All', ...new Set(adverts.map(({ make }) => make))],\n      prices: createArrayWithStep(\n        0,\n        Math.max(\n          ...new Set(\n            adverts.map(({ rentalPrice }) => rentalPrice.replace(/(\\$)/, ''))\n          )\n        ),\n        10\n      ),\n    };\n\n    totalAdverts = visibleAdverts.length;\n    totalPages = !totalAdverts ? 1 : Math.ceil(totalAdverts / limitAdverts);\n  }\n\n  const currentAdvertsData = useMemo(() => {\n    const firstPageIndex = (currentPage - 1) * limitAdverts;\n    const lastPageIndex = firstPageIndex + limitAdverts;\n\n    return visibleAdverts?.slice(firstPageIndex, lastPageIndex);\n  }, [currentPage, visibleAdverts]);\n\n  const handleClickLoadMore = () => {\n    if (currentPage < totalPages) {\n      setCurrentPage(prev => prev + 1);\n      window.scrollTo(0, 0);\n    }\n  };\n\n  const handleClickReturnToStart = () => {\n    setCurrentPage(1);\n    window.scrollTo(0, 0);\n  };\n\n  return (\n    <Section>\n      {isLoading ? (\n        <CustomLoader />\n      ) : (\n        <>\n          <Filter filtersList={dataFilters} />\n          <AdvertsList list={currentAdvertsData} />\n          <ButtonsWrapper>\n            {totalPages > currentPage && (\n              <LoadMoreButton\n                variant=\"text\"\n                className=\"load-more__btn\"\n                onClick={handleClickLoadMore}\n              >\n                Load more\n              </LoadMoreButton>\n            )}\n            {currentPage !== 1 && (\n              <LoadMoreButton\n                variant=\"text\"\n                className=\"load-more__btn\"\n                onClick={handleClickReturnToStart}\n              >\n                Return to 1 page\n              </LoadMoreButton>\n            )}\n          </ButtonsWrapper>\n        </>\n      )}\n    </Section>\n  );\n};\n\nexport default Catalog;\n","export const createArrayWithStep = (start, end, step) => {\n  return Array.from(\n    { length: Math.floor((end - start) / step) + 1 },\n    (_, index) => start + index * step\n  );\n};\n"],"names":["InputFromToFieldGroup","styled","_templateObject","_taggedTemplateLiteral","InputFromToContainer","_templateObject2","InputFromToWrapper","_templateObject3","props","_props$id","id","_props$label","label","_props$value","value","from","to","_useState","useState","_useState2","_slicedToArray","fieldValue","setFieldValue","onChange","e","test","target","trim","prev","_objectSpread","_defineProperty","name","commaToNumber","toast","_jsxs","children","_jsx","htmlFor","concat","className","type","autoComplete","xmlns","width","height","fill","strokeLinecap","strokeLinejoin","strokeWidth","d","DropdownContainer","DropdownLabel","DropdownHeader","DropdownSelectInput","_templateObject4","DropdownListContainer","_templateObject5","DropdownList","_templateObject6","DropdownItem","_templateObject7","_ref","_ref$placeholder","placeholder","optionList","isOpen","setIsOpen","_useState3","_useState4","selectedOption","setSelectedOption","useEffect","handleKeydown","code","window","addEventListener","removeEventListener","onClick","readOnly","ChevronDownIcon","map","option","Math","random","FilterForm","filtersList","dispatch","useDispatch","filter","useSelector","selectAdvertsFilter","onSubmit","_newfilters","preventDefault","_e$target$elements","elements","brand","price","newfilters","removeCommasFromString","setAdvertsFilter","SelectField","brands","prices","FromToField","mileage","Button","LoadMoreButton","ButtonsWrapper","start","end","step","_useGetAdvertsQuery","useGetAdvertsQuery","adverts","data","isLoading","currentPage","setCurrentPage","dataFilters","visibleAdverts","useMemo","totalAdverts","totalPages","getFilteredAdverts","_toConsumableArray","Set","make","max","apply","_ref2","rentalPrice","replace","Array","length","floor","_","index","ceil","currentAdvertsData","_visibleAdverts","firstPageIndex","lastPageIndex","slice","Section","CustomLoader","_Fragment","Filter","AdvertsList","list","variant","scrollTo"],"sourceRoot":""}