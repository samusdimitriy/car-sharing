{"version":3,"file":"static/js/733.63f64bb2.chunk.js","mappings":"gQAcMA,EAAYC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mDAKtBC,EAAiBH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,gHAU3BG,GAAiBL,EAAAA,EAAAA,IAAOM,EAAAA,EAAPN,CAAcO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,kMAqFrC,UA1EkB,WAChB,IAAMM,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,GAC3BC,GAAqCC,EAAAA,EAAAA,MAAvBC,EAAOF,EAAbG,KAAeC,EAASJ,EAATI,UACvBC,GAAsCC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAE9BI,GAAiBC,EAAAA,EAAAA,UAAQ,WAAO,GAAG,IAGnCC,EAAe,EACfC,EAAa,EAEjB,IAAKV,EAAW,CACd,IAAMW,EAAmBb,EAAQL,QAAO,SAAAmB,GAAW,OAAAA,EAARC,QAAuB,IAIlEJ,GAFAF,GAAiBO,EAAAA,EAAAA,GAAmBH,EAAkBlB,IAExBsB,OAC9BL,EAAcD,EAAmBO,KAAKC,KAAKR,EAVxB,GAUU,CAC/B,CAEA,IAAMS,GAAqBV,EAAAA,EAAAA,UAAQ,WAAO,IAADW,EACjCC,EAda,GAcKf,EAAc,GAChCgB,EAAgBD,EAfH,EAiBnB,OAAqB,QAArBD,EAAOZ,SAAc,IAAAY,OAAA,EAAdA,EAAgBG,MAAMF,EAAgBC,EAC/C,GAAG,CAAChB,EAAaE,IAcjB,OACEgB,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CAAAC,SACLzB,GACCuB,EAAAA,EAAAA,KAACG,EAAAA,EAAY,KAEbH,EAAAA,EAAAA,KAACvC,EAAS,CAAAyC,UACRE,EAAAA,EAAAA,MAACvC,EAAc,CAAAqC,SAAA,EACbF,EAAAA,EAAAA,KAACK,EAAAA,EAAU,CAACC,KAAMX,KAClBS,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mBAAkBL,SAAA,CAC9Bf,EAAaL,IACZkB,EAAAA,EAAAA,KAACjC,EAAc,CACbyC,QAAQ,OACRD,UAAU,iBACVE,QAzBY,WACtB3B,EAAcK,IAChBJ,GAAe,SAAA2B,GAAI,OAAIA,EAAO,CAAC,IAC/BC,OAAOC,SAAS,EAAG,GAEvB,EAoB6CV,SAC9B,cAIc,IAAhBpB,IACCkB,EAAAA,EAAAA,KAACjC,EAAc,CACbyC,QAAQ,OACRD,UAAU,iBACVE,QA3BiB,WAC/B1B,EAAe,GACf4B,OAAOC,SAAS,EAAG,EACrB,EAwBkDV,SACnC,8BAUjB,C","sources":["pages/Favorites/Favorites.jsx"],"sourcesContent":["import React, { useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\n\nimport { useGetAdvertsQuery } from 'redux/adverts/advertsSlice';\nimport { selectAdvertsFilter } from 'redux/filters/filtersSelectors';\n\nimport { getFilteredAdverts } from 'utils/getFilteredAdverts';\n\nimport AdvertList from 'component/AdvertList/AdvertList';\nimport Button from 'component/Button/Button';\nimport Section from 'component/Section/Section';\nimport CustomLoader from 'component/CustomLoader/CustomLoader';\n\nconst Container = styled.div`\n  position: relative;\n  display: flex;\n`;\n\nconst AdvertsWrapper = styled.div`\n  width: 100%;\n\n  & > button {\n    display: block;\n    margin: auto;\n    margin-top: 44px;\n  }\n`;\n\nconst LoadMoreButton = styled(Button)`\n  display: block;\n  margin: 100px auto 0 auto;\n  border: 1px solid var(--accentColor);\n\n  &:hover {\n    background-color: var(--accentColor);\n    color: var(--whiteColor);\n  }\n`;\n\nconst Favorites = () => {\n  const filter = useSelector(selectAdvertsFilter);\n  const { data: adverts, isLoading } = useGetAdvertsQuery();\n  const [currentPage, setCurrentPage] = useState(1);\n\n  let visibleAdverts = useMemo(() => {}, []);\n\n  const limitAdverts = 8;\n  let totalAdverts = 0;\n  let totalPages = 0;\n\n  if (!isLoading) {\n    const favoritedAdverts = adverts.filter(({ favorite }) => favorite);\n\n    visibleAdverts = getFilteredAdverts(favoritedAdverts, filter);\n\n    totalAdverts = visibleAdverts.length;\n    totalPages = !totalAdverts ? 1 : Math.ceil(totalAdverts / limitAdverts);\n  }\n\n  const currentAdvertsData = useMemo(() => {\n    const firstPageIndex = (currentPage - 1) * limitAdverts;\n    const lastPageIndex = firstPageIndex + limitAdverts;\n\n    return visibleAdverts?.slice(firstPageIndex, lastPageIndex);\n  }, [currentPage, visibleAdverts]);\n\n  const handleClickLoadMore = () => {\n    if (currentPage < totalPages) {\n      setCurrentPage(prev => prev + 1);\n      window.scrollTo(0, 0);\n    }\n  };\n\n  const handleClickReturnToStart = () => {\n    setCurrentPage(1);\n    window.scrollTo(0, 0);\n  };\n\n  return (\n    <Section>\n      {isLoading ? (\n        <CustomLoader />\n      ) : (\n        <Container>\n          <AdvertsWrapper>\n            <AdvertList list={currentAdvertsData} />\n            <div className=\"buttons__wrapper\">\n              {totalPages > currentPage && (\n                <LoadMoreButton\n                  variant=\"text\"\n                  className=\"load-more__btn\"\n                  onClick={handleClickLoadMore}\n                >\n                  Load more\n                </LoadMoreButton>\n              )}\n              {currentPage !== 1 && (\n                <LoadMoreButton\n                  variant=\"text\"\n                  className=\"load-more__btn\"\n                  onClick={handleClickReturnToStart}\n                >\n                  Return to 1 page\n                </LoadMoreButton>\n              )}\n            </div>\n          </AdvertsWrapper>\n        </Container>\n      )}\n    </Section>\n  );\n};\n\nexport default Favorites;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","AdvertsWrapper","_templateObject2","LoadMoreButton","Button","_templateObject3","filter","useSelector","selectAdvertsFilter","_useGetAdvertsQuery","useGetAdvertsQuery","adverts","data","isLoading","_useState","useState","_useState2","_slicedToArray","currentPage","setCurrentPage","visibleAdverts","useMemo","totalAdverts","totalPages","favoritedAdverts","_ref","favorite","getFilteredAdverts","length","Math","ceil","currentAdvertsData","_visibleAdverts","firstPageIndex","lastPageIndex","slice","_jsx","Section","children","CustomLoader","_jsxs","AdvertList","list","className","variant","onClick","prev","window","scrollTo"],"sourceRoot":""}